<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhenapp.mapper.Custom.TNoteInfoCustomMapper" >
  <select id="findTotalNoteinfoByPage" resultType="int"  parameterType="java.util.HashMap">
  	select count(1) from t_note_info a
  	<where>
  		<if test="agentid !=null and agentid != '' ">
  			a.agentid = #{agentid}
  		</if>
  	</where>
  </select>
  <select id="findNoteinfo" parameterType="java.util.HashMap" resultType="com.zhenapp.po.Custom.TNoteInfoCustom">
  	select * from t_note_info a
  	<where>
  		<if test="agentid !=null and agentid != '' ">
  			a.agentid = #{agentid}
  		</if>
  		<if test="notetype != null and notetype != '' ">
  			a.notetype = #{notetype}
  		</if>
  	</where>
  </select>
  <select id="findNoteinfoByPage" resultType="com.zhenapp.po.Custom.TNoteInfoCustom" parameterType="java.util.HashMap">
  	SELECT b.dicinfoname as notestatename,a.notepk,a.noteid,a.notetype,a.notestate,a.notename,DATE_FORMAT(a.createtime,'%Y-%m-%d %H:%i:%s') AS createtime,a.createuser,DATE_FORMAT(a.updatetime,'%Y-%m-%d %H:%i:%s') AS updatetime,a.updateuser 
  	FROM t_note_info a 
  	LEFT JOIN t_data_dic_info b ON a.notestate=b.dicinfoid
  	<where>
  		<if test="agentid !=null and agentid != '' ">
  			a.agentid = #{agentid}
  		</if>
  	</where>
  	ORDER BY a.updatetime+0 DESC limit #{page},#{rows}
  </select>
  
  <select id="findNoteinfoByIdAndType" resultType="com.zhenapp.po.Custom.TNoteInfoCustom" parameterType="java.util.HashMap">
  	SELECT a.noteid,a.notetype,a.notestate,a.notename,CASE WHEN a.notetype='0' THEN b.electricitytext WHEN a.notetype='1' THEN c.guidetext ELSE d.introtext END AS notetext FROM t_note_info a 
	LEFT JOIN (SELECT electricityid,electricitytext,'0' AS notetype FROM t_electricity_info) b ON a.noteid = b.electricityid AND a.notetype=b.notetype 
	LEFT JOIN (SELECT guideid,guidetext,'1' AS notetype FROM t_guide_info) c ON a.noteid = c.guideid AND a.notetype=c.notetype 
	LEFT JOIN (SELECT introid,introtext,'2' AS notetype FROM t_intro_info) d ON a.noteid = d.introid AND a.notetype=d.notetype 
	WHERE a.noteid=#{noteid} AND a.notetype=#{notetype}
  </select>
  
  <update id="updatenotestateByidandtype" parameterType="java.util.HashMap">
  	update t_note_info set notestate='67' where noteid=#{noteid} and notetype=#{notetype}
  </update>
  
  <update id="updatenoteByid"  parameterType="com.zhenapp.po.Custom.TNoteInfoCustom" >
  	update t_note_info set 
      notename = #{notename,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=VARCHAR},
      updateuser = #{updateuser,jdbcType=VARCHAR}
    where noteid = #{noteid,jdbcType=INTEGER}
  </update>
  <delete id="deleteByIdAndType" parameterType="java.util.HashMap">
  	delete from t_note_info where noteid=#{noteid} and notetype=#{notetype}
  </delete>
  <insert id="savenote" parameterType="com.zhenapp.po.Custom.TNoteInfoCustom">
	  insert into t_note_info (noteid, notetype,agentid,
      notename, notestate,createtime, createuser, 
      updatetime, updateuser)
    values ( #{noteid,jdbcType=VARCHAR}, #{notetype,jdbcType=VARCHAR}, #{agentid},
      #{notename,jdbcType=VARCHAR},#{notestate},#{createtime,jdbcType=VARCHAR}, #{createuser,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=VARCHAR}, #{updateuser,jdbcType=VARCHAR})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.zhenapp.po.Custom.TNoteInfoCustom" >
    update t_note_info
    set noteid = #{noteid,jdbcType=INTEGER},
      notetype = #{notetype,jdbcType=VARCHAR},
      notename = #{notename,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      createuser = #{createuser,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=VARCHAR},
      updateuser = #{updateuser,jdbcType=VARCHAR}
    where notepk = #{notepk,jdbcType=INTEGER}
  </update>
</mapper>